{"version":3,"sources":["constants.ts","components/Buttons/Buttons.tsx","components/GoodList/GoodList.tsx","App.tsx","index.tsx"],"names":["SortType","SortDirection","Buttons","_ref","sortAlphabetically","sortByLength","reverse","reset","order","direction","_jsxs","className","children","_jsx","type","cn","ALPHABETICALLY","onClick","BY_LENGTH","OPPOSITE","DIRECTLY","BY_DEFAULT","GoodList","goods","map","good","goodsFromServer","App","setOrder","useState","setDirection","preparedGoods","prepareGoods","sortOrder","sortDirection","goodsCopy","sort","next","prev","localeCompare","length","ReactDOM","render","document","getElementById"],"mappings":"iOAAO,IAAKA,EAAQ,SAARA,GAAQ,OAARA,EAAQ,gCAARA,EAAQ,qBAARA,EAAQ,uBAARA,CAAQ,MAMRC,EAAa,SAAbA,GAAa,OAAbA,EAAa,oBAAbA,EAAa,oBAAbA,CAAa,M,WCOlB,MAAMC,EAA2BC,IAAA,IAAC,mBACvCC,EAAkB,aAClBC,EAAY,QACZC,EAAO,MACPC,EAAK,MACLC,EAAK,UACLC,GACDN,EAAA,OACCO,eAAA,OAAKC,UAAU,UAASC,SAAA,CACtBC,cAAA,UACEC,KAAK,SACLH,UAAWI,IAAG,SAAU,UAAW,CACjC,WAAYP,IAAUR,EAASgB,iBAEjCC,QAASb,EAAmBQ,SAC7B,wBAIDC,cAAA,UACEC,KAAK,SACLH,UAAWI,IAAG,SAAU,aAAc,CACpC,WAAYP,IAAUR,EAASkB,YAEjCD,QAASZ,EAAaO,SACvB,mBAIDC,cAAA,UACEC,KAAK,SACLH,UAAWI,IAAG,SAAU,aAAc,CACpC,WAAYN,IAAcR,EAAckB,WAE1CF,QAASX,EAAQM,SAClB,aAICH,IAAcR,EAAcmB,UAC5BZ,IAAUR,EAASqB,aACnBR,cAAA,UACEC,KAAK,SACLH,UAAU,4BACVM,QAASV,EAAMK,SAChB,YAIC,ECxDKU,EAA4BnB,IAAA,IAAC,MAAEoB,GAAOpB,EAAA,OACjDU,cAAA,MAAAD,SACGW,EAAMC,KAAKC,GACVZ,cAAA,MAAI,UAAQ,OAAMD,SACfa,GADqBA,MAIvB,ECNMC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA4BWC,EAAMA,KACjB,MAAOnB,EAAOoB,GAAYC,mBAAS7B,EAASqB,aACrCZ,EAAWqB,GAAgBD,mBAAS5B,EAAcmB,UAenDW,EA1CaC,EACnBT,EACAU,EACAC,KAEA,MAAMC,EAAY,IAAIZ,GAEtB,OAAQU,GACN,KAAKjC,EAASgB,eACZmB,EAAUC,MAAK,CAACC,EAAMC,IAASD,EAAKE,cAAcD,KAClD,MACF,KAAKtC,EAASkB,UACZiB,EAAUC,MAAK,CAACC,EAAMC,IAASD,EAAKG,OAASF,EAAKE,SAUtD,OAJIN,IAAkBjC,EAAckB,UAClCgB,EAAU7B,UAGL6B,CAAS,EAoBMH,CAAaN,EAAiBlB,EAAOC,GAE3D,OACEC,eAAA,OAAKC,UAAU,kBAAiBC,SAAA,CAC9BC,cAACX,EAAO,CACNE,mBAAoBA,IAAMwB,EAAS5B,EAASgB,gBAC5CX,aAAcA,IAAMuB,EAAS5B,EAASkB,WACtCZ,QAASA,KAnBbwB,EACErB,IAAcR,EAAcmB,SACxBnB,EAAckB,SACdlB,EAAcmB,SAgBiB,EACjCb,MAAOA,KAZXqB,EAAS5B,EAASqB,iBAClBS,EAAa7B,EAAcmB,WAYvBZ,MAAOA,EACPC,UAAWA,IAEbI,cAACS,EAAQ,CAACC,MAAOQ,MACb,ECxEVU,IAASC,OAAO7B,cAACc,EAAG,IAAKgB,SAASC,eAAe,Q","file":"static/js/main.f4cce5d0.chunk.js","sourcesContent":["export enum SortType {\n  ALPHABETICALLY = \"alphabetically\",\n  BY_LENGTH = \"byLength\",\n  BY_DEFAULT = \"byDefault\",\n}\n\nexport enum SortDirection {\n  DIRECTLY = \"directly\",\n  OPPOSITE = \"opposite\",\n}\n","import cn from \"classnames\";\n\nimport { SortType, SortDirection } from \"../../constants\";\n\ntype Props = {\n  sortAlphabetically: () => void;\n  sortByLength: () => void;\n  reverse: () => void;\n  reset: () => void;\n  order: SortType;\n  direction: SortDirection;\n};\n\nexport const Buttons: React.FC<Props> = ({\n  sortAlphabetically,\n  sortByLength,\n  reverse,\n  reset,\n  order,\n  direction,\n}) => (\n  <div className=\"buttons\">\n    <button\n      type=\"button\"\n      className={cn(\"button\", \"is-info\", {\n        \"is-light\": order !== SortType.ALPHABETICALLY,\n      })}\n      onClick={sortAlphabetically}\n    >\n      Sort alphabetically\n    </button>\n\n    <button\n      type=\"button\"\n      className={cn(\"button\", \"is-success\", {\n        \"is-light\": order !== SortType.BY_LENGTH,\n      })}\n      onClick={sortByLength}\n    >\n      Sort by length\n    </button>\n\n    <button\n      type=\"button\"\n      className={cn(\"button\", \"is-warning\", {\n        \"is-light\": direction !== SortDirection.OPPOSITE,\n      })}\n      onClick={reverse}\n    >\n      Reverse\n    </button>\n\n    {(direction !== SortDirection.DIRECTLY ||\n      order !== SortType.BY_DEFAULT) && (\n      <button\n        type=\"button\"\n        className=\"button is-danger is-light\"\n        onClick={reset}\n      >\n        Reset\n      </button>\n    )}\n  </div>\n);\n","// import React from \"react\";\n\ntype Props = {\n  goods: string[];\n};\n\nexport const GoodList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map((good) => (\n      <li data-cy=\"Good\" key={good}>\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n","import { useState } from \"react\";\nimport \"bulma/css/bulma.css\";\nimport \"./App.scss\";\nimport { Buttons } from \"./components/Buttons\";\nimport { GoodList } from \"./components/GoodList\";\nimport { SortType, SortDirection } from \"./constants\";\n\nexport const goodsFromServer = [\n  \"Dumplings\",\n  \"Carrot\",\n  \"Eggs\",\n  \"Ice cream\",\n  \"Apple\",\n  \"Bread\",\n  \"Fish\",\n  \"Honey\",\n  \"Jam\",\n  \"Garlic\",\n];\n\nconst prepareGoods = (\n  goods: string[],\n  sortOrder: string,\n  sortDirection: string,\n) => {\n  const goodsCopy = [...goods];\n\n  switch (sortOrder) {\n    case SortType.ALPHABETICALLY:\n      goodsCopy.sort((next, prev) => next.localeCompare(prev));\n      break;\n    case SortType.BY_LENGTH:\n      goodsCopy.sort((next, prev) => next.length - prev.length);\n      break;\n    default:\n      break;\n  }\n\n  if (sortDirection === SortDirection.OPPOSITE) {\n    goodsCopy.reverse();\n  }\n\n  return goodsCopy;\n};\n\nexport const App = () => {\n  const [order, setOrder] = useState(SortType.BY_DEFAULT);\n  const [direction, setDirection] = useState(SortDirection.DIRECTLY);\n\n  const switchDirection = () => {\n    setDirection(\n      direction === SortDirection.DIRECTLY\n        ? SortDirection.OPPOSITE\n        : SortDirection.DIRECTLY,\n    );\n  };\n\n  const resetSortSettings = () => {\n    setOrder(SortType.BY_DEFAULT);\n    setDirection(SortDirection.DIRECTLY);\n  };\n\n  const preparedGoods = prepareGoods(goodsFromServer, order, direction);\n\n  return (\n    <div className=\"section content\">\n      <Buttons\n        sortAlphabetically={() => setOrder(SortType.ALPHABETICALLY)}\n        sortByLength={() => setOrder(SortType.BY_LENGTH)}\n        reverse={() => switchDirection()}\n        reset={() => resetSortSettings()}\n        order={order}\n        direction={direction}\n      />\n      <GoodList goods={preparedGoods} />\n    </div>\n  );\n};\n","import ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}